name: Unittests (Fast)

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'mai/**'
      - 'tests/**'
      - 'pyproject.toml'
      - 'poetry.lock'
      - '.github/workflows/tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'mai/**'
      - 'tests/**'
      - 'pyproject.toml'
      - 'poetry.lock'
      - '.github/workflows/tests.yml'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # python-version: ['3.11', '3.12', '3.13']
        python-version: ['3.11']
        os: [ubuntu-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --with dev

      - name: Run unit tests
        run: |
          poetry run pytest tests/ \
            -m "not integration and not slow" \
            --cov=mai \
            --cov-report=xml \
            --cov-report=term-missing \
            --cov-report=html \
            --cov-fail-under=90 \
            --strict-markers \
            --tb=short

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
